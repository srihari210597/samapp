name: CI/CD - Build, Push to ECR & Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: [self-hosted, linux]
    name: Build Docker Image & Deploy to ECS

    steps:
    - name: 🧾 Checkout source code
      uses: actions/checkout@v3

    - name: 🔐 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: 🔓 Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: 🐳 Build Docker image
      run: |
        docker build -t samapp .

    - name: 🏷️ Tag Docker image
      run: |
        docker tag samapp:latest 088777336307.dkr.ecr.ap-south-1.amazonaws.com/samapp:latest

    - name: 🚀 Push Docker image to ECR
      run: |
        docker push 088777336307.dkr.ecr.ap-south-1.amazonaws.com/samapp:latest

    - name: 🧾 Generate ECS Task Definition JSON
      run: |
        cat > ecs-task-def.json <<EOF
        {
          "family": "samapp-task",
          "networkMode": "awsvpc",
          "executionRoleArn": "arn:aws:iam::088777336307:role/ecsTaskExecutionRole",
          "requiresCompatibilities": ["FARGATE"],
          "cpu": "256",
          "memory": "512",
          "containerDefinitions": [
            {
              "name": "sam-app-py",
              "image": "088777336307.dkr.ecr.ap-south-1.amazonaws.com/samapp:latest",
              "essential": true,
              "portMappings": [
                {
                  "containerPort": 80,
                  "protocol": "tcp"
                }
              ]
            }
          ]
        }
        EOF

    - name: 📦 Deploy to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ecs-task-def.json
        service: sam-app-svc
        cluster: sam-app
        wait-for-service-stability: true
