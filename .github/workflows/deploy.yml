name: CI/CD - Build, Push to ECR & Deploy to ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
  ECR_REGISTRY: 088777336307.dkr.ecr.ap-south-1.amazonaws.com
  ECR_REPO: samapp
  CLUSTER_NAME: sam-app
  SERVICE_NAME: sam-app-svc
  TASK_FAMILY: samapp-task
  CONTAINER_NAME: sam-app-py

jobs:
  ci:
    name: Build & Push Docker Image
    runs-on: [self-hosted, linux]
    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}

    steps:
    - name: 🧾 Checkout source code
      uses: actions/checkout@v3

    - name: 🧮 Set Image Tag from Git SHA
      id: set-tag
      run: echo "image_tag=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

    - name: 🔐 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 🔓 Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: 🐳 Build Docker image
      run: |
        docker build -t $ECR_REPO .

    - name: 🏷️ Tag Docker image with SHA
      run: |
        docker tag $ECR_REPO:latest $ECR_REGISTRY/$ECR_REPO:${{ steps.set-tag.outputs.image_tag }}

    - name: 🚀 Push Docker image to ECR
      run: |
        docker push $ECR_REGISTRY/$ECR_REPO:${{ steps.set-tag.outputs.image_tag }}

  cd:
    name: Deploy to ECS
    runs-on: [self-hosted, linux]
    needs: ci
    env:
      IMAGE_TAG: ${{ needs.ci.outputs.image_tag }}

    steps:
    - name: 🔐 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 📦 Update ECS Task Definition Image
      id: update-task-def
      uses: aws-actions/amazon-ecs-update-task-definition@v1
      with:
        task-definition: ${{ env.TASK_FAMILY }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }}

    - name: 🚀 Deploy to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.update-task-def.outputs.task-definition }}
        service: ${{ env.SERVICE_NAME }}
        cluster: ${{ env.CLUSTER_NAME }}
        wait-for-service-stability: true
